@inproceedings{ist-africa_2009_conference_ist-africa_2009,
	title = {{IST}-{Africa} 2009 conference proceedings 06-08 {May} 2009, {Kampala}, {Uganda}},
	language = {English},
	publisher = {IIMC International Information Management Corporation},
	author = {{IST-Africa 2009 conference} and Cunningham, Paul and Cunningham, Miriam},
	year = {2009},
	note = {OCLC: 781517842}
}

@inproceedings{SAGrid,
	author = {B. Becker et. al},
	title  = {The South African National Compute Grid},
	crossref = {ist-africa_2009_conference_ist-africa_2009},
	howpublished = { "\url{http://www.ist-africa.org/conference2009/default.asp?page=secure-doc&docid=3419&paperid=909&paper.refno=95&paper.siteid=5&versionid=1971&number=}" },
	year = {2009}
}

@misc{Alibuild,
	url = {https://alisw.github.io/alibuild/},
	urldate = {2016-06-06TZ}
}

@article{edmunds_experiences_2016,
	title = {Experiences in integrated data and research object publishing using {GigaDB}},
	issn = {1432-1300},
	url = {http://dx.doi.org/10.1007/s00799-016-0174-6},
	doi = {10.1007/s00799-016-0174-6},
	abstract = {In the era of computation and data-driven research, traditional methods of disseminating research are no longer fit-for-purpose. New approaches for disseminating data, methods and results are required to maximize knowledge discovery. The “long tail” of small, unstructured datasets is well catered for by a number of general-purpose repositories, but there has been less support for “big data”. Outlined here are our experiences in attempting to tackle the gaps in publishing large-scale, computationally intensive research. GigaScience is an open-access, open-data journal aiming to revolutionize large-scale biological data dissemination, organization and re-use. Through use of the data handling infrastructure of the genomics centre BGI, GigaScience links standard manuscript publication with an integrated database (GigaDB) that hosts all associated data, and provides additional data analysis tools and computing resources. Furthermore, the supporting workflows and methods are also integrated to make published articles more transparent and open. GigaDB has released many new and previously unpublished datasets and data types, including as urgently needed data to tackle infectious disease outbreaks, cancer and the growing food crisis. Other “executable” research objects, such as workflows, virtual machines and software from several GigaScience articles have been archived and shared in reproducible, transparent and usable formats. With data citation producing evidence of, and credit for, its use in the wider research community, GigaScience demonstrates a move towards more executable publications. Here data analyses can be reproduced and built upon by users without coding backgrounds or heavy computational infrastructure in a more democratized manner.},
	journal = {International Journal on Digital Libraries},
	author = {Edmunds, Scott C. and Li, Peter and Hunter, Christopher I. and Xiao, Si Zhe and Davidson, Robert L. and Nogoy, Nicole and Goodman, Laurie},
	year = {2016},
	pages = {1--13}
}

@article{beaulieu-jones_reproducible_2016,
	title = {Reproducible {Computational} {Workflows} with {Continuous} {Analysis}},
	url = {http://biorxiv.org/content/early/2016/06/01/056473.abstract},
	doi = {10.1101/056473},
	abstract = {Reproducing experiments is vital to science. Being able to replicate, validate and extend previous work also speeds new research projects. Reproducing computational biology experiments, which are scripted, should be straightforward. But reproducing such work remains challenging and time consuming. In the ideal world we would be able to quickly and easily rewind to the precise computing environment where results were generated. We would then be able to reproduce the original analysis or perform new analyses. We introduce a process termed "continuous analysis" which provides inherent reproducibility to computational research at a minimal cost to the researcher. Continuous analysis combines Docker, a container service similar to virtual machines, with continuous integration, a popular software development technique, to automatically re-run computational analysis whenever relevant changes are made to the source code. This allows results to be reproduced quickly, accurately and without needing to contact the original authors. Continuous analysis also provides an audit trail for analyses that use data with sharing restrictions. This allows reviewers, editors, and readers to verify reproducibility without manually downloading and rerunning any code.},
	journal = {bioRxiv},
	author = {Beaulieu-Jones, Brett K and Greene, Casey S},
	month = jun,
	year = {2016}
}

@article{david_validation_2014,
	title = {Validation of {Grid} {Middleware} for the {European} {Grid} {Infrastructure}},
	volume = {12},
	issn = {1572-9184},
	url = {http://dx.doi.org/10.1007/s10723-014-9301-z},
	doi = {10.1007/s10723-014-9301-z},
	abstract = {The European Grid Infrastructure (EGI) is providing a sustainable pan–European Computing Grid to support e–Science, integrating more than 350 computing resource centers worldwide. One of its main challenges is that the middleware driving this production infrastructure is constantly evolving, as it adapts to the changing needs of the EGI Community. Since the software is provided by external technology providers, it needs to pass through a quality verification process before it is included in the EGI official release called Unified Middleware Distribution (UMD). Therefore, all software components undergo a release process covering the definition of the functionality and quality criteria, the verification of those criteria, and the testing under production environments. This paper details the design, development and implementation of this software validation process. An analysis is performed on several metrics to evaluate the process impact on the stability of the production infrastructure, by capturing malfunctions and other issues at the initial testing phases.},
	number = {3},
	journal = {Journal of Grid Computing},
	author = {David, Mário and Borges, Gonçalo and Gomes, Jorge and Pina, João and Campos Plasencia, Isabel and Fernández-del-Castillo, Enol and Díaz, Iván and Fernandez, Carlos and Freire, Esteban and Simón, Álvaro and Koumantaros, Kostas and Dreschner, Michel and Ferrari, Tiziana and Solagna, Peter},
	year = {2014},
	pages = {543--558}
}

@misc{_performance_????,
	title = {Performance results on {SAGrid} for libsvm training and characterisation studies - {Open} {Access} {Repository}},
	url = {https://oar.sci-gaia.eu/record/182?ln=en},
	urldate = {2016-05-18TZ}
}

@misc{_libsvm_????,
	title = {{LIBSVM}},
	url = {http://dl.acm.org/citation.cfm?id=1961199},
	urldate = {2016-05-18TZ}
}

@misc{_performance_????-1,
	title = {Performance results on {SAGrid} for libsvm training and characterisation studies - {Open} {Access} {Repository}},
	url = {https://oar.sci-gaia.eu/record/182?ln=en},
	urldate = {2016-05-18TZ},
	keywords = {data}
}

@misc{_sanren_????,
	title = {{SANReN} – {South} {African} {National} {Research} {Network}},
	url = {http://www.sanren.ac.za/},
	urldate = {2016-07-25},
	file = {SANReN – South African National Research Network:files/25/www.sanren.ac.za.html:text/html}
}
